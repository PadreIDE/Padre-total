digraph g
{

  /* list of nodes */
  "char-1" [label="char"];
  "command-1" [label="`: cursor to mark\n': cursor to first non blank char in line of mark"];
  "command-10" [label="g;: cursor to N older position in change list\ng,: cursor to N newer position in change list"];
  "command-11" [label="@: cursor to 1st char of line\n^: cursor to 1st non-blank char of line\n%: cursor to next match of item in this line at or after the cursor\nM: cursor to middle line of window on first non-blank char"];
  "command-12" [label="g0: cursor to 1st screen char of line\ng^: cursor to 1st non-blank screen char of line\ngm: cursor to char in middle of line"];
  "command-13" [label="aw: select N words\naW: select N WORDs\nas: select N sentences\nap: select N paragraphs, blank line is also a paragraph boundary\na(: select N [] blocks\na(: select N () blocks\na<: select N <> blocks\nat: select N tag blocks\na{: select N {} blocks\na\": select N quote blocks"];
  "command-14" [label="[[: cursor N sections backward or to previous \"{\" in 1st column, special with operator\n[]: cursor N sections forward or to next \"{\" in 1st column\n[`: cursor N times to previous lowercase mark\n[': cursor N times to first non blank char in line of  previous lowercase mark\n[(: cursor to Nth previous unmatched (\n[{: cursor to Nth previous unmatched {"];
  "command-15" [label="g_: cursor to last non-blank char of Nth next line\ng$: cursor to end of Nth next screen line\ngk: cursor N screen lines upward when wrap is on, else like k\ngj: cursor N screen lines downward  when wrap is on, else like j\ngg: cursor to line N, default first line, on 1st non blank char\ngo: cursor to byte N of buffer, default first byte\nge: cursor N words backward to end of word\ngE: cursor N WORDs backward to end of word"];
  "command-16" [label="m: set mark at cursor position"];
  "command-17" [label="CTRL-O: cursor to N older position in jump list\nCTRL-I: cursor to N newer position in jump list"];
  "command-18" [label="g`: cursor to mark but don't add to jump list\ng': cursor to first non blank char in line of mark but don't add to jump list"];
  "command-2" [label="iw: select N inner words\niW: select N inner WORDs\nis: select N inner sentences\nip: select N inner paragraphs, blank line is also a paragraph boundary\ni[: select N inner [] blocks\ni(: select N inner () blocks\ni>: select N inner <> blocks\nit: select N inner tag blocks\ni{: select N inner {} blocks\ni\": select N inner quote blocks"];
  "command-3" [label="f: cursor to Nth occurrence of {char} to the right\nF: cursor to Nth occurrence of {char} to the left\nt: cursor till before Nth occurrence of {char} to the right\nT: cursor till before Nth occurrence of {char} to the left"];
  "command-4" [label="h: cursor N chars to the left\nl: cursor N chars to the right\n$: cursor to end of Nth next line\n|: cursor to column N\n;: repeat latest f, t, F or T N times\n,: repeat latest f, t, F or T in opposite direction N times\nk: cursor N lines upward\nj: cursor N lines downward\n-: cursor to the first char N lines higher\n+: cursor to the first char N lines lower\n_: cursor to the first char N-1 lines lower\nG: cursor to line N, default last line, on 1st non blank char\n<C-End>: cursor to line N, default last line, on last char\nw: cursor N words forward\nW: cursor N WORDs forward\ne: cursor forward to end of word N, does not stop in empty line\nE: cursor forward to end of WORD N, does not stop in empty line\nb: cursor N words backward\nB: cursor N WORDs backward\n(: cursor N sentences backward\n): cursor N sentences forward\n{: cursor N paragraphs backward\n}: cursor N paragraphs forward\nH: cursor to Nth line count from top of window on first non-blank char\nL: cursor to Nth line count from bottom of window on first non-blank char"];
  "command-5" [label="m': set previous context mark at cursor position\nm[: set the '[ mark at cursor position\nm]: set the '] mark at cursor position"];
  "command-6" [label="][: cursor N sections backward or to previous \"{\" in 1st column\n]]: cursor N sections forward or to next \"{\" in 1st column, special with operator\n]`: cursor N times to next lowercase mark\n]': cursor N times to first non blank char in line of  next lowercase mark\n](: cursor to Nth next unmatched (\n]{: cursor to Nth next unmatched {"];
  "command-7" [label="%: cursor to N percentage of buffer, on 1st non blank char, must include count"];
  "command-8" [label="'[: cursor to first non blank char in first line of previously changed or yanked text\n']: cursor to first non blank char in last line of previously changed or yanked text\n'<: cursor to first non blank char in first line of last selected visual area\n'>: cursor to first non blank char in last line of last selected visual area\n'': cursor to first non blank char in line of position before last jump, or to m' mark\n'\": cursor to first non blank char in line of position when last exiting buffer\n'^: cursor to first non blank char in line of position when insert mode was last stopped\n'.: cursor to first non blank char in line of position where last change was made\n'(: cursor to first non blank char in line starting current sentence\n'): cursor to first non blank char in line ending current sentence\n'{: cursor to first non blank char in line starting current paragraph\n'}: cursor to first non blank char in line ending current paragraph"];
  "command-9" [label="`[: cursor to first char of previously changed or yanked text\n`]: cursor to last char of previously changed or yanked text\n`<: cursor to first char of last selected visual area\n`>: cursor to last char of last selected visual area\n``: cursor to position before last jump, or to m' mark\n`\": cursor to position when last exiting buffer\n`^: cursor to position when insert mode was last stopped\n`.: cursor to position where last change was made\n`(: cursor to start of current sentence\n`): cursor to end of current sentence\n`{: cursor to start of current paragraph\n`}: cursor to end of current paragraph"];
  "count-1" [label="count"];
  "count-2" [label="count"];
  "count-6" [label="count"];
  "init-1" [label="init"];
  "key1-1" [label="` '"];
  "key1-10" [label="g"];
  "key1-11" [label="@ ^ % M"];
  "key1-12" [label="g"];
  "key1-13" [label="a"];
  "key1-14" [label="["];
  "key1-15" [label="g"];
  "key1-17" [label="CTRL-O CTRL-I"];
  "key1-2" [label="i"];
  "key1-3" [label="f F t T"];
  "key1-4" [label="h l $ | ; , k j - + _ G <C-End> w W e E b B ( ) { } H L"];
  "key1-5" [label="m"];
  "key1-6" [label="]"];
  "key1-7" [label="%"];
  "key1-8" [label="'"];
  "key1-9" [label="`"];
  "key2-1" [label="w W s p [ ( > t { \""];
  "key2-10" [label="_ $ k j g o e E"];
  "key2-11" [label="` '"];
  "key2-2" [label="' [ ]"];
  "key2-3" [label="[ ] ` ' ( {"];
  "key2-4" [label="[ ] < > ' \" ^ . ( ) { }"];
  "key2-5" [label="[ ] < > ` \" ^ . ( ) { }"];
  "key2-6" [label="; ,"];
  "key2-7" [label="0 ^ m"];
  "key2-8" [label="w W s p ( < t { \""];
  "key2-9" [label="[ ] ` ' ( {"];
  "letter-1" [label="letter"];
  "letter-2" [label="letter"];
  "letter-3" [label="letter"];
  "op-1" [label="op"];

  /* list of edges */
  "char-1" -> "command-3";
  "count-1" -> "key1-13";
  "count-1" -> "key1-2";
  "count-2" -> "key1-14";
  "count-2" -> "key1-15";
  "count-2" -> "key1-3";
  "count-2" -> "key1-4";
  "count-2" -> "key1-6";
  "count-2" -> "key1-7";
  "count-6" -> "key1-10";
  "count-6" -> "key1-17";
  "init-1" -> "count-2";
  "init-1" -> "count-6";
  "init-1" -> "key1-1";
  "init-1" -> "key1-10";
  "init-1" -> "key1-11";
  "init-1" -> "key1-12";
  "init-1" -> "key1-14";
  "init-1" -> "key1-15";
  "init-1" -> "key1-17";
  "init-1" -> "key1-3";
  "init-1" -> "key1-4";
  "init-1" -> "key1-5";
  "init-1" -> "key1-6";
  "init-1" -> "key1-8";
  "init-1" -> "key1-9";
  "init-1" -> "op-1";
  "key1-10" -> "key2-6";
  "key1-11" -> "command-11";
  "key1-12" -> "key2-11";
  "key1-12" -> "key2-7";
  "key1-13" -> "key2-8";
  "key1-14" -> "key2-9";
  "key1-15" -> "key2-10";
  "key1-17" -> "command-17";
  "key1-1" -> "letter-1";
  "key1-2" -> "key2-1";
  "key1-3" -> "char-1";
  "key1-4" -> "command-4";
  "key1-5" -> "key2-2";
  "key1-5" -> "letter-2";
  "key1-6" -> "key2-3";
  "key1-7" -> "command-7";
  "key1-8" -> "key2-4";
  "key1-9" -> "key2-5";
  "key2-10" -> "command-15";
  "key2-11" -> "letter-3";
  "key2-1" -> "command-2";
  "key2-2" -> "command-5";
  "key2-3" -> "command-6";
  "key2-4" -> "command-8";
  "key2-5" -> "command-9";
  "key2-6" -> "command-10";
  "key2-7" -> "command-12";
  "key2-8" -> "command-13";
  "key2-9" -> "command-14";
  "letter-1" -> "command-1";
  "letter-2" -> "command-16";
  "letter-3" -> "command-18";
  "op-1" -> "count-1";
  "op-1" -> "count-2";
  "op-1" -> "key1-1";
  "op-1" -> "key1-11";
  "op-1" -> "key1-12";
  "op-1" -> "key1-13";
  "op-1" -> "key1-14";
  "op-1" -> "key1-15";
  "op-1" -> "key1-2";
  "op-1" -> "key1-3";
  "op-1" -> "key1-4";
  "op-1" -> "key1-6";
  "op-1" -> "key1-8";
  "op-1" -> "key1-9";
}
