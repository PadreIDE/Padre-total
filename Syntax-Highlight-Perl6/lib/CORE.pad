my $core = {
    stash => {
	Bool => { name => 'Bool', file => 'CORE.pad', line => __LINE__,
	    stash => {
		True => { name => 'True', file => 'CORE.pad', line => __LINE__ },
		False => { name => 'False', file => 'CORE.pad', line => __LINE__ },
	    },
	},
	Num => { name => 'Num', file => 'CORE.pad', line => __LINE__,
	    stash => {
		pi => { name => 'pi', value => atan2(1,1)*4, file => 'CORE.pad', line => __LINE__ },
		e => { name => 'e', value => exp(1), file => 'CORE.pad', line => __LINE__ },
	    },
	},
	Order => { name => 'Order', file => 'CORE.pad', line => __LINE__,
	    stash => {
		Increase => { name => 'Increase', file => 'CORE.pad', line => __LINE__ },
		Same => { name => 'Same', file => 'CORE.pad', line => __LINE__ },
		Decrease => { name => 'Decrease', file => 'CORE.pad', line => __LINE__ },
	    },
	},
	DEBUG => { name => 'DEBUG', file => 'CORE.pad', line => __LINE__,
	    stash => {
		EXPR => { name => 'Increase', file => 'CORE.pad', line => __LINE__ },
		trace_call => { name => 'Increase', file => 'CORE.pad', line => __LINE__ },
		EXPORT => {
		    stash => {
			DEFAULT => {
			    stash => {
				EXPR => { name => 'Increase', file => 'CORE.pad', line => __LINE__ },
				trace_call => { name => 'Increase', file => 'CORE.pad', line => __LINE__ },
			    },
			},
		    },
		},
	    },
	},
	GLOBAL => { name => 'GLOBAL', file => 'CORE.pad', line => __LINE__,
	    stash => {
		Test => { name => 'Test', file => 'CORE.pad', line => __LINE__,
		    stash => {
			'&plan' => { name => '&plan', file => 'CORE.pad', line => __LINE__ },
			'&is' => { name => '&is', file => 'CORE.pad', line => __LINE__ },
			'&ok' => { name => '&ok', file => 'CORE.pad', line => __LINE__ },
			'&dies_ok' => { name => '&dies_ok', file => 'CORE.pad', line => __LINE__ },
			'&lives_ok' => { name => '&lives_ok', file => 'CORE.pad', line => __LINE__ },
			'&skip' => { name => '&skip', file => 'CORE.pad', line => __LINE__ },
			'&todo' => { name => '&todo', file => 'CORE.pad', line => __LINE__ },
			'&pass' => { name => '&pass', file => 'CORE.pad', line => __LINE__ },
			'&flunk' => { name => '&flunk', file => 'CORE.pad', line => __LINE__ },
			'&force_todo' => { name => '&force_todo', file => 'CORE.pad', line => __LINE__ },
			'&use_ok' => { name => '&use_ok', file => 'CORE.pad', line => __LINE__ },
			'&isa_ok' => { name => '&isa_ok', file => 'CORE.pad', line => __LINE__ },
			'&cmp_ok' => { name => '&cmp_ok', file => 'CORE.pad', line => __LINE__ },
			'&diag' => { name => '&diag', file => 'CORE.pad', line => __LINE__ },
			'&is_deeply' => { name => '&is_deeply', file => 'CORE.pad', line => __LINE__ },
			'&isnt' => { name => '&isnt', file => 'CORE.pad', line => __LINE__ },
			'&like' => { name => '&like', file => 'CORE.pad', line => __LINE__ },
			'&skip_rest' => { name => '&skip_rest', file => 'CORE.pad', line => __LINE__ },
			'&unlike' => { name => '&unlike', file => 'CORE.pad', line => __LINE__ },
			'&skip_rest' => { name => '&skip_rest', file => 'CORE.pad', line => __LINE__ },
			'&eval_dies_ok' => { name => '&eval_dies_ok', file => 'CORE.pad', line => __LINE__ },
			'&eval_lives_ok' => { name => '&eval_lives_ok', file => 'CORE.pad', line => __LINE__ },
			'&approx' => { name => '&approx', file => 'CORE.pad', line => __LINE__ },
			'&is_approx' => { name => '&is_approx', file => 'CORE.pad', line => __LINE__ },
			'&throws_ok' => { name => '&throws_ok', file => 'CORE.pad', line => __LINE__ },
			'&version_lt' => { name => '&version_lt', file => 'CORE.pad', line => __LINE__ },
			EXPORT => { name => 'EXPORT', file => 'CORE.pad', line => __LINE__,
			    stash => {
				DEFAULT => { name => 'DEFAULT', file => 'CORE.pad', line => __LINE__,
				    stash => {	# XXX would be aliases in the real thing
					'&plan' => { name => '&plan', file => 'CORE.pad', line => __LINE__ },
					'&is' => { name => '&is', file => 'CORE.pad', line => __LINE__ },
					'&ok' => { name => '&ok', file => 'CORE.pad', line => __LINE__ },
					'&dies_ok' => { name => '&dies_ok', file => 'CORE.pad', line => __LINE__ },
					'&lives_ok' => { name => '&lives_ok', file => 'CORE.pad', line => __LINE__ },
					'&skip' => { name => '&skip', file => 'CORE.pad', line => __LINE__ },
					'&todo' => { name => '&todo', file => 'CORE.pad', line => __LINE__ },
					'&pass' => { name => '&pass', file => 'CORE.pad', line => __LINE__ },
					'&flunk' => { name => '&flunk', file => 'CORE.pad', line => __LINE__ },
					'&force_todo' => { name => '&force_todo', file => 'CORE.pad', line => __LINE__ },
					'&use_ok' => { name => '&use_ok', file => 'CORE.pad', line => __LINE__ },
					'&isa_ok' => { name => '&isa_ok', file => 'CORE.pad', line => __LINE__ },
					'&cmp_ok' => { name => '&cmp_ok', file => 'CORE.pad', line => __LINE__ },
					'&diag' => { name => '&diag', file => 'CORE.pad', line => __LINE__ },
					'&is_deeply' => { name => '&is_deeply', file => 'CORE.pad', line => __LINE__ },
					'&isnt' => { name => '&isnt', file => 'CORE.pad', line => __LINE__ },
					'&like' => { name => '&like', file => 'CORE.pad', line => __LINE__ },
					'&skip_rest' => { name => '&skip_rest', file => 'CORE.pad', line => __LINE__ },
					'&unlike' => { name => '&unlike', file => 'CORE.pad', line => __LINE__ },
					'&skip_rest' => { name => '&skip_rest', file => 'CORE.pad', line => __LINE__ },
					'&eval_dies_ok' => { name => '&eval_dies_ok', file => 'CORE.pad', line => __LINE__ },
					'&eval_lives_ok' => { name => '&eval_lives_ok', file => 'CORE.pad', line => __LINE__ },
					'&approx' => { name => '&approx', file => 'CORE.pad', line => __LINE__ },
					'&is_approx' => { name => '&is_approx', file => 'CORE.pad', line => __LINE__ },
					'&throws_ok' => { name => '&throws_ok', file => 'CORE.pad', line => __LINE__ },
					'&version_lt' => { name => '&version_lt', file => 'CORE.pad', line => __LINE__ },
				    },
				},
			    },
			},
		    },
		},
	    },
	},
	PROCESS => { name => 'PROCESS', file => 'CORE.pad', line => __LINE__,
	    stash => {
	    },
	},

	Nil => { name => 'Nil', file => 'CORE.pad', line => __LINE__ },
	True => { name => 'True', file => 'CORE.pad', line => __LINE__ },
	False => { name => 'False', file => 'CORE.pad', line => __LINE__ },
	P6opaque => { name => 'P6opaque', file => 'CORE.pad', line => __LINE__ },
	Object => { name => 'Object', file => 'CORE.pad', line => __LINE__ },
	Any => { name => 'Any', file => 'CORE.pad', line => __LINE__ },
	Junction => { name => 'Junction', file => 'CORE.pad', line => __LINE__ },
	junction => { name => 'junction', file => 'CORE.pad', line => __LINE__ },
	Whatever => { name => 'Whatever', file => 'CORE.pad', line => __LINE__ },
	WhateverCode => { name => 'WhateverCode', file => 'CORE.pad', line => __LINE__ },
	HyperWhatever => { name => 'HyperWhatever', file => 'CORE.pad', line => __LINE__ },
	Capture => { name => 'Capture', file => 'CORE.pad', line => __LINE__ },
	Match => { name => 'Match', file => 'CORE.pad', line => __LINE__ },
	Signature => { name => 'Signature', file => 'CORE.pad', line => __LINE__ },
	Proxy => { name => 'Proxy', file => 'CORE.pad', line => __LINE__ },
	Matcher => { name => 'Matcher', file => 'CORE.pad', line => __LINE__ },
	Package => { name => 'Package', file => 'CORE.pad', line => __LINE__ },
	Module => { name => 'Module', file => 'CORE.pad', line => __LINE__ },
	Class => { name => 'Class', file => 'CORE.pad', line => __LINE__ },
	Role => { name => 'Role', file => 'CORE.pad', line => __LINE__ },
	Grammar => { name => 'Grammar', file => 'CORE.pad', line => __LINE__ },
	Scalar => { name => 'Scalar', file => 'CORE.pad', line => __LINE__ },
	Array => { name => 'Array', file => 'CORE.pad', line => __LINE__ },
	Hash => { name => 'Hash', file => 'CORE.pad', line => __LINE__ },
	KeyHash => { name => 'KeyHash', file => 'CORE.pad', line => __LINE__ },
	KeySet => { name => 'KeySet', file => 'CORE.pad', line => __LINE__ },
	KeyBag => { name => 'KeyBag', file => 'CORE.pad', line => __LINE__ },
	Pair => { name => 'Pair', file => 'CORE.pad', line => __LINE__ },
	List => { name => 'List', file => 'CORE.pad', line => __LINE__ },
	Seq => { name => 'Seq', file => 'CORE.pad', line => __LINE__ },
	Range => { name => 'Range', file => 'CORE.pad', line => __LINE__ },
	Set => { name => 'Set', file => 'CORE.pad', line => __LINE__ },
	Bag => { name => 'Bag', file => 'CORE.pad', line => __LINE__ },
	Mapping => { name => 'Mapping', file => 'CORE.pad', line => __LINE__ },
	Void => { name => 'Void', file => 'CORE.pad', line => __LINE__ },
	Undef => { name => 'Undef', file => 'CORE.pad', line => __LINE__ },
	Failure => { name => 'Failure', file => 'CORE.pad', line => __LINE__ },
	Exception => { name => 'Exception', file => 'CORE.pad', line => __LINE__ },
	Code => { name => 'Code', file => 'CORE.pad', line => __LINE__ },
	Block => { name => 'Block', file => 'CORE.pad', line => __LINE__ },
	Routine => { name => 'Routine', file => 'CORE.pad', line => __LINE__ },
	Sub => { name => 'Sub', file => 'CORE.pad', line => __LINE__ },
	Macro => { name => 'Macro', file => 'CORE.pad', line => __LINE__ },
	Method => { name => 'Method', file => 'CORE.pad', line => __LINE__ },
	Submethod => { name => 'Submethod', file => 'CORE.pad', line => __LINE__ },
	Regex => { name => 'Regex', file => 'CORE.pad', line => __LINE__ },
	Multi => { name => 'Multi', file => 'CORE.pad', line => __LINE__ },

	Str => { name => 'Str', file => 'CORE.pad', line => __LINE__ },
	Cat => { name => 'Cat', file => 'CORE.pad', line => __LINE__ },
	Blob => { name => 'Blob', file => 'CORE.pad', line => __LINE__ },
	Char => { name => 'Char', file => 'CORE.pad', line => __LINE__ },
	AnyChar => { name => 'AnyChar', file => 'CORE.pad', line => __LINE__ },
	CharLingua => { name => 'CharLingua', file => 'CORE.pad', line => __LINE__ },
	Byte => { name => 'Byte', file => 'CORE.pad', line => __LINE__ },
	Codepoint => { name => 'Codepoint', file => 'CORE.pad', line => __LINE__ },
	Grapheme => { name => 'Grapheme', file => 'CORE.pad', line => __LINE__ },
	StrPos => { name => 'StrPos', file => 'CORE.pad', line => __LINE__ },
	StrLen => { name => 'StrLen', file => 'CORE.pad', line => __LINE__ },
	Version => { name => 'Version', file => 'CORE.pad', line => __LINE__ },

	Num => { name => 'Num', file => 'CORE.pad', line => __LINE__ },
	num => { name => 'num', file => 'CORE.pad', line => __LINE__ },
	num16 => { name => 'num16', file => 'CORE.pad', line => __LINE__ },
	num32 => { name => 'num32', file => 'CORE.pad', line => __LINE__ },
	num64 => { name => 'num64', file => 'CORE.pad', line => __LINE__ },
	num128 => { name => 'num128', file => 'CORE.pad', line => __LINE__ },

	Complex => { name => 'Complex', file => 'CORE.pad', line => __LINE__ },
	complex => { name => 'complex', file => 'CORE.pad', line => __LINE__ },

	# (eventually these should be instantiated generics, complex:of(num64) and such)
	complex16 => { name => 'complex16', file => 'CORE.pad', line => __LINE__ },
	complex32 => { name => 'complex32', file => 'CORE.pad', line => __LINE__ },
	complex64 => { name => 'complex64', file => 'CORE.pad', line => __LINE__ },
	complex128 => { name => 'complex128', file => 'CORE.pad', line => __LINE__ },

	Int => { name => 'Int', file => 'CORE.pad', line => __LINE__ },
	int => { name => 'int', file => 'CORE.pad', line => __LINE__ },

	int1 => { name => 'int1', file => 'CORE.pad', line => __LINE__ },
	int2 => { name => 'int2', file => 'CORE.pad', line => __LINE__ },
	int4 => { name => 'int4', file => 'CORE.pad', line => __LINE__ },
	int8 => { name => 'int8', file => 'CORE.pad', line => __LINE__ },
	int16 => { name => 'int16', file => 'CORE.pad', line => __LINE__ },
	int32 => { name => 'int32', file => 'CORE.pad', line => __LINE__ },
	int64 => { name => 'int64', file => 'CORE.pad', line => __LINE__ },

	Rat => { name => 'Rat', file => 'CORE.pad', line => __LINE__ },
	rat => { name => 'rat', file => 'CORE.pad', line => __LINE__ },
	rat8 => { name => 'rat8', file => 'CORE.pad', line => __LINE__ },
	rat16 => { name => 'rat16', file => 'CORE.pad', line => __LINE__ },
	rat32 => { name => 'rat32', file => 'CORE.pad', line => __LINE__ },
	rat64 => { name => 'rat64', file => 'CORE.pad', line => __LINE__ },

	UInt => { name => 'UInt', file => 'CORE.pad', line => __LINE__ },
	uint => { name => 'uint', file => 'CORE.pad', line => __LINE__ },
	uint1 => { name => 'uint1', file => 'CORE.pad', line => __LINE__ },
	uint2 => { name => 'uint2', file => 'CORE.pad', line => __LINE__ },
	uint4 => { name => 'uint4', file => 'CORE.pad', line => __LINE__ },
	uint8 => { name => 'uint8', file => 'CORE.pad', line => __LINE__ },
	uint16 => { name => 'uint16', file => 'CORE.pad', line => __LINE__ },
	uint32 => { name => 'uint32', file => 'CORE.pad', line => __LINE__ },
	uint64 => { name => 'uint64', file => 'CORE.pad', line => __LINE__ },

	Buf => { name => 'Buf', file => 'CORE.pad', line => __LINE__ },
	buf => { name => 'buf', file => 'CORE.pad', line => __LINE__ },
	buf1 => { name => 'buf1', file => 'CORE.pad', line => __LINE__ },
	buf2 => { name => 'buf2', file => 'CORE.pad', line => __LINE__ },
	buf4 => { name => 'buf4', file => 'CORE.pad', line => __LINE__ },
	buf8 => { name => 'buf8', file => 'CORE.pad', line => __LINE__ },
	buf16 => { name => 'buf16', file => 'CORE.pad', line => __LINE__ },
	buf32 => { name => 'buf32', file => 'CORE.pad', line => __LINE__ },
	buf64 => { name => 'buf64', file => 'CORE.pad', line => __LINE__ },

	utf8 => { name => 'utf8', file => 'CORE.pad', line => __LINE__ },
	utf16 => { name => 'utf16', file => 'CORE.pad', line => __LINE__ },
	utf32 => { name => 'utf32', file => 'CORE.pad', line => __LINE__ },

	Bit => { name => 'Bit', file => 'CORE.pad', line => __LINE__ },
	bit => { name => 'bit', file => 'CORE.pad', line => __LINE__ },
	bool => { name => 'bool', file => 'CORE.pad', line => __LINE__ },

	Order => { name => 'Order', file => 'CORE.pad', line => __LINE__ },
	Increasing => { name => 'Increasing', file => 'CORE.pad', line => __LINE__ },
	Decreasing => { name => 'Decreasing', file => 'CORE.pad', line => __LINE__ },
	Ordered => { name => 'Ordered', file => 'CORE.pad', line => __LINE__ },
	Callable => { name => 'Callable', file => 'CORE.pad', line => __LINE__ },
	Positional => { name => 'Positional', file => 'CORE.pad', line => __LINE__ },
	Associative => { name => 'Associative', file => 'CORE.pad', line => __LINE__ },
	Abstraction => { name => 'Abstraction', file => 'CORE.pad', line => __LINE__ },
	Integral => { name => 'Integral', file => 'CORE.pad', line => __LINE__ },
	Ordering => { name => 'Ordering', file => 'CORE.pad', line => __LINE__ },
	KeyExtractor => { name => 'KeyExtractor', file => 'CORE.pad', line => __LINE__ },
	Comparator => { name => 'Comparator', file => 'CORE.pad', line => __LINE__ },
	OrderingPair => { name => 'OrderingPair', file => 'CORE.pad', line => __LINE__ },

	Instant => { name => 'Instant', file => 'CORE.pad', line => __LINE__ },
	Duration => { name => 'Duration', file => 'CORE.pad', line => __LINE__ },

	IO => { name => 'IO', file => 'CORE.pad', line => __LINE__ },

	KitchenSink => { name => 'KitchenSink', file => 'CORE.pad', line => __LINE__ },

	'&WHAT' => { name => '&WHAT', file => 'CORE.pad', line => __LINE__ },
	'&WHERE' => { name => '&WHERE', file => 'CORE.pad', line => __LINE__ },
	'&HOW' => { name => '&HOW', file => 'CORE.pad', line => __LINE__ },
	'&WHICH' => { name => '&WHICH', file => 'CORE.pad', line => __LINE__ },
	'&VAR' => { name => '&VAR', file => 'CORE.pad', line => __LINE__ },
	'&WHO' => { name => '&WHO', file => 'CORE.pad', line => __LINE__ },
	'&WHENCE' => { name => '&WHENCE', file => 'CORE.pad', line => __LINE__ },
	'&new' => { name => '&new', file => 'CORE.pad', line => __LINE__ },
	'&HOW' => { name => '&HOW', file => 'CORE.pad', line => __LINE__ },
	'&fail' => { name => '&fail', file => 'CORE.pad', line => __LINE__ },
	'&temp' => { name => '&temp', file => 'CORE.pad', line => __LINE__ },
	'&let' => { name => '&let', file => 'CORE.pad', line => __LINE__ },
	'&any' => { name => '&any', file => 'CORE.pad', line => __LINE__ },
	'&all' => { name => '&all', file => 'CORE.pad', line => __LINE__ },
	'&none' => { name => '&none', file => 'CORE.pad', line => __LINE__ },
	'&one' => { name => '&one', file => 'CORE.pad', line => __LINE__ },
	'&not' => { name => '&not', file => 'CORE.pad', line => __LINE__ },
	'&true' => { name => '&true', file => 'CORE.pad', line => __LINE__ },
	'&next' => { name => '&next', file => 'CORE.pad', line => __LINE__ },
	'&last' => { name => '&last', file => 'CORE.pad', line => __LINE__ },
	'&redo' => { name => '&redo', file => 'CORE.pad', line => __LINE__ },
	'&break' => { name => '&break', file => 'CORE.pad', line => __LINE__ },
	'&goto' => { name => '&goto', file => 'CORE.pad', line => __LINE__ },

	'&die' => { name => '&die', file => 'CORE.pad', line => __LINE__ },
	'&exit' => { name => '&exit', file => 'CORE.pad', line => __LINE__ },
	'&warn' => { name => '&warn', file => 'CORE.pad', line => __LINE__ },
	'&caller' => { name => '&caller', file => 'CORE.pad', line => __LINE__ },
	'&want' => { name => '&want', file => 'CORE.pad', line => __LINE__ },
	'&eval' => { name => '&eval', file => 'CORE.pad', line => __LINE__ },
	'&evalfile' => { name => '&evalfile', file => 'CORE.pad', line => __LINE__ },
	'&callsame' => { name => '&callsame', file => 'CORE.pad', line => __LINE__ },
	'&callwith' => { name => '&callwith', file => 'CORE.pad', line => __LINE__ },
	'&nextsame' => { name => '&nextsame', file => 'CORE.pad', line => __LINE__ },
	'&nextwith' => { name => '&nextwith', file => 'CORE.pad', line => __LINE__ },
	'&lastcall' => { name => '&lastcall', file => 'CORE.pad', line => __LINE__ },
	'&defined' => { name => '&defined', file => 'CORE.pad', line => __LINE__ },
	'&undefine' => { name => '&undefine', file => 'CORE.pad', line => __LINE__ },
	'&item' => { name => '&item', file => 'CORE.pad', line => __LINE__ },
	'&list' => { name => '&list', file => 'CORE.pad', line => __LINE__ },
	'&slice' => { name => '&slice', file => 'CORE.pad', line => __LINE__ },
	'&eager' => { name => '&eager', file => 'CORE.pad', line => __LINE__ },
	'&hyper' => { name => '&hyper', file => 'CORE.pad', line => __LINE__ },

	'&cat' => { name => '&cat', file => 'CORE.pad', line => __LINE__ },
	'&classify' => { name => '&classify', file => 'CORE.pad', line => __LINE__ },
	'&quotemeta' => { name => '&quotemeta', file => 'CORE.pad', line => __LINE__ },
	'&chr' => { name => '&chr', file => 'CORE.pad', line => __LINE__ },
	'&ord' => { name => '&ord', file => 'CORE.pad', line => __LINE__ },
	'&p5chop' => { name => '&p5chop', file => 'CORE.pad', line => __LINE__ },
	'&chop' => { name => '&chop', file => 'CORE.pad', line => __LINE__ },
	'&p5chomp' => { name => '&p5chomp', file => 'CORE.pad', line => __LINE__ },
	'&chomp' => { name => '&chomp', file => 'CORE.pad', line => __LINE__ },
	'&trim' => { name => '&trim', file => 'CORE.pad', line => __LINE__ },
	'&trim_start' => { name => '&trim_start', file => 'CORE.pad', line => __LINE__ },
	'&trim_end' => { name => '&trim_end', file => 'CORE.pad', line => __LINE__ },
	'&index' => { name => '&index', file => 'CORE.pad', line => __LINE__ },
	'&rindex' => { name => '&rindex', file => 'CORE.pad', line => __LINE__ },
	'&substr' => { name => '&substr', file => 'CORE.pad', line => __LINE__ },
	'&join' => { name => '&join', file => 'CORE.pad', line => __LINE__ },
	'&split' => { name => '&split', file => 'CORE.pad', line => __LINE__ },
	'&comb' => { name => '&comb', file => 'CORE.pad', line => __LINE__ },
	'&pack' => { name => '&pack', file => 'CORE.pad', line => __LINE__ },
	'&unpack' => { name => '&unpack', file => 'CORE.pad', line => __LINE__ },
	'&uc' => { name => '&uc', file => 'CORE.pad', line => __LINE__ },
	'&ucfirst' => { name => '&ucfirst', file => 'CORE.pad', line => __LINE__ },
	'&lc' => { name => '&lc', file => 'CORE.pad', line => __LINE__ },
	'&lcfirst' => { name => '&lcfirst', file => 'CORE.pad', line => __LINE__ },
	'&normalize' => { name => '&normalize', file => 'CORE.pad', line => __LINE__ },
	'&nfc' => { name => '&nfc', file => 'CORE.pad', line => __LINE__ },
	'&nfd' => { name => '&nfd', file => 'CORE.pad', line => __LINE__ },
	'&nfkc' => { name => '&nfkc', file => 'CORE.pad', line => __LINE__ },
	'&nfkd' => { name => '&nfkd', file => 'CORE.pad', line => __LINE__ },
	'&samecase' => { name => '&samecase', file => 'CORE.pad', line => __LINE__ },
	'&sameaccent' => { name => '&sameaccent', file => 'CORE.pad', line => __LINE__ },
	'&capitalize' => { name => '&capitalize', file => 'CORE.pad', line => __LINE__ },
	'&chars' => { name => '&chars', file => 'CORE.pad', line => __LINE__ },
	'&graphs' => { name => '&graphs', file => 'CORE.pad', line => __LINE__ },
	'&codes' => { name => '&codes', file => 'CORE.pad', line => __LINE__ },
	'&bytes' => { name => '&bytes', file => 'CORE.pad', line => __LINE__ },

	'&say' => { name => '&say', file => 'CORE.pad', line => __LINE__ },
	'&print' => { name => '&print', file => 'CORE.pad', line => __LINE__ },
	'&open' => { name => '&open', file => 'CORE.pad', line => __LINE__ },
	'&close' => { name => '&close', file => 'CORE.pad', line => __LINE__ },
	'&printf' => { name => '&printf', file => 'CORE.pad', line => __LINE__ },
	'&sprintf' => { name => '&sprintf', file => 'CORE.pad', line => __LINE__ },
	'&unlink' => { name => '&unlink', file => 'CORE.pad', line => __LINE__ },
	'&link' => { name => '&link', file => 'CORE.pad', line => __LINE__ },
	'&symlink' => { name => '&symlink', file => 'CORE.pad', line => __LINE__ },
	'&elems' => { name => '&elems', file => 'CORE.pad', line => __LINE__ },
	'&end' => { name => '&end', file => 'CORE.pad', line => __LINE__ },
	'&grep' => { name => '&grep', file => 'CORE.pad', line => __LINE__ },
	'&map' => { name => '&map', file => 'CORE.pad', line => __LINE__ },
	'&first' => { name => '&first', file => 'CORE.pad', line => __LINE__ },
	'&reduce' => { name => '&reduce', file => 'CORE.pad', line => __LINE__ },
	'&sort' => { name => '&sort', file => 'CORE.pad', line => __LINE__ },
	'&min' => { name => '&min', file => 'CORE.pad', line => __LINE__ },
	'&max' => { name => '&max', file => 'CORE.pad', line => __LINE__ },
	'&uniq' => { name => '&uniq', file => 'CORE.pad', line => __LINE__ },
	'&push' => { name => '&push', file => 'CORE.pad', line => __LINE__ },
	'&reverse' => { name => '&reverse', file => 'CORE.pad', line => __LINE__ },
	'&flip' => { name => '&flip', file => 'CORE.pad', line => __LINE__ },
	'&take' => { name => '&take', file => 'CORE.pad', line => __LINE__ },
	'&splice' => { name => '&splice', file => 'CORE.pad', line => __LINE__ },
	'&slurp' => { name => '&slurp', file => 'CORE.pad', line => __LINE__ },
	'&get' => { name => '&get', file => 'CORE.pad', line => __LINE__ },
	'&lines' => { name => '&lines', file => 'CORE.pad', line => __LINE__ },
	'&getc' => { name => '&getc', file => 'CORE.pad', line => __LINE__ },
	'&prompt' => { name => '&prompt', file => 'CORE.pad', line => __LINE__ },
	'&chdir' => { name => '&chdir', file => 'CORE.pad', line => __LINE__ },
	'&chmod' => { name => '&chmod', file => 'CORE.pad', line => __LINE__ },

	'&zip' => { name => '&zip', file => 'CORE.pad', line => __LINE__ },
	'&each' => { name => '&each', file => 'CORE.pad', line => __LINE__ },
	'&roundrobin' => { name => '&roundrobin', file => 'CORE.pad', line => __LINE__ },
	'&caller' => { name => '&caller', file => 'CORE.pad', line => __LINE__ },
	'&return' => { name => '&return', file => 'CORE.pad', line => __LINE__ },
	'&leave' => { name => '&leave', file => 'CORE.pad', line => __LINE__ },
	'&make' => { name => '&make', file => 'CORE.pad', line => __LINE__ },
	'&pop' => { name => '&pop', file => 'CORE.pad', line => __LINE__ },
	'&shift' => { name => '&shift', file => 'CORE.pad', line => __LINE__ },
	'&unshift' => { name => '&unshift', file => 'CORE.pad', line => __LINE__ },
	'&reduce' => { name => '&reduce', file => 'CORE.pad', line => __LINE__ },
	'&keys' => { name => '&keys', file => 'CORE.pad', line => __LINE__ },
	'&values' => { name => '&values', file => 'CORE.pad', line => __LINE__ },
	'&hash' => { name => '&hash', file => 'CORE.pad', line => __LINE__ },
	'&kv' => { name => '&kv', file => 'CORE.pad', line => __LINE__ },
	'&key' => { name => '&key', file => 'CORE.pad', line => __LINE__ },
	'&value' => { name => '&value', file => 'CORE.pad', line => __LINE__ },
	'&pairs' => { name => '&pairs', file => 'CORE.pad', line => __LINE__ },
	'&pair' => { name => '&pair', file => 'CORE.pad', line => __LINE__ },
	'&enum' => { name => '&enum', file => 'CORE.pad', line => __LINE__ },

	'&sign' => { name => '&sign', file => 'CORE.pad', line => __LINE__ },
	'&abs' => { name => '&abs', file => 'CORE.pad', line => __LINE__ },
	'&floor' => { name => '&floor', file => 'CORE.pad', line => __LINE__ },
	'&ceiling' => { name => '&ceiling', file => 'CORE.pad', line => __LINE__ },
	'&round' => { name => '&round', file => 'CORE.pad', line => __LINE__ },
	'&truncate' => { name => '&truncate', file => 'CORE.pad', line => __LINE__ },
	'&exp' => { name => '&exp', file => 'CORE.pad', line => __LINE__ },
	'&log' => { name => '&log', file => 'CORE.pad', line => __LINE__ },
	'&log10' => { name => '&log10', file => 'CORE.pad', line => __LINE__ },
	'&sqrt' => { name => '&sqrt', file => 'CORE.pad', line => __LINE__ },
	'&roots' => { name => '&roots', file => 'CORE.pad', line => __LINE__ },
	'&rand' => { name => '&rand', file => 'CORE.pad', line => __LINE__ },
	'&srand' => { name => '&srand', file => 'CORE.pad', line => __LINE__ },
	'&pick' => { name => '&pick', file => 'CORE.pad', line => __LINE__ },
	'&cis' => { name => '&cis', file => 'CORE.pad', line => __LINE__ },
	'&unpolar' => { name => '&unpolar', file => 'CORE.pad', line => __LINE__ },

	'&sin' => { name => '&sin', file => 'CORE.pad', line => __LINE__ },
	'&cos' => { name => '&cos', file => 'CORE.pad', line => __LINE__ },
	'&tan' => { name => '&tan', file => 'CORE.pad', line => __LINE__ },
	'&asin' => { name => '&asin', file => 'CORE.pad', line => __LINE__ },
	'&acos' => { name => '&acos', file => 'CORE.pad', line => __LINE__ },
	'&atan' => { name => '&atan', file => 'CORE.pad', line => __LINE__ },
	'&sec' => { name => '&sec', file => 'CORE.pad', line => __LINE__ },
	'&cosec' => { name => '&cosec', file => 'CORE.pad', line => __LINE__ },
	'&cotan' => { name => '&cotan', file => 'CORE.pad', line => __LINE__ },
	'&asec' => { name => '&asec', file => 'CORE.pad', line => __LINE__ },
	'&acosec' => { name => '&acosec', file => 'CORE.pad', line => __LINE__ },
	'&acotan' => { name => '&acotan', file => 'CORE.pad', line => __LINE__ },
	'&sinh' => { name => '&sinh', file => 'CORE.pad', line => __LINE__ },
	'&cosh' => { name => '&cosh', file => 'CORE.pad', line => __LINE__ },
	'&tanh' => { name => '&tanh', file => 'CORE.pad', line => __LINE__ },
	'&asinh' => { name => '&asinh', file => 'CORE.pad', line => __LINE__ },
	'&acosh' => { name => '&acosh', file => 'CORE.pad', line => __LINE__ },
	'&atanh' => { name => '&atanh', file => 'CORE.pad', line => __LINE__ },
	'&sech' => { name => '&sech', file => 'CORE.pad', line => __LINE__ },
	'&cosech' => { name => '&cosech', file => 'CORE.pad', line => __LINE__ },
	'&cotanh' => { name => '&cotanh', file => 'CORE.pad', line => __LINE__ },
	'&asech' => { name => '&asech', file => 'CORE.pad', line => __LINE__ },
	'&acosech' => { name => '&acosech', file => 'CORE.pad', line => __LINE__ },
	'&acotanh' => { name => '&acotanh', file => 'CORE.pad', line => __LINE__ },
	'&atan2' => { name => '&atan2', file => 'CORE.pad', line => __LINE__ },

	'&gmtime' => { name => '&gmtime', file => 'CORE.pad', line => __LINE__ },
	'&localtime' => { name => '&localtime', file => 'CORE.pad', line => __LINE__ },
	'&time' => { name => '&time', file => 'CORE.pad', line => __LINE__ },
	'&times' => { name => '&times', file => 'CORE.pad', line => __LINE__ },
	'&gethost' => { name => '&gethost', file => 'CORE.pad', line => __LINE__ },
	'&getpw' => { name => '&getpw', file => 'CORE.pad', line => __LINE__ },
	'&chroot' => { name => '&chroot', file => 'CORE.pad', line => __LINE__ },
	'&getlogin' => { name => '&getlogin', file => 'CORE.pad', line => __LINE__ },
	'&run' => { name => '&run', file => 'CORE.pad', line => __LINE__ },
	'&runinstead' => { name => '&runinstead', file => 'CORE.pad', line => __LINE__ },
	'&fork' => { name => '&fork', file => 'CORE.pad', line => __LINE__ },
	'&wait' => { name => '&wait', file => 'CORE.pad', line => __LINE__ },
	'&kill' => { name => '&kill', file => 'CORE.pad', line => __LINE__ },
	'&sleep' => { name => '&sleep', file => 'CORE.pad', line => __LINE__ },
    }
};

sub fixup {
    my $h = shift;
    return unless $h;
    for my $k (keys %$h) {
	my $v = $h->{$k};
	if ($k =~ /^\w/) {
	    $h->{"&$k"} = $h->{$k} if $k =~ /^\w+$/;
	    fixup($v->{'stash'});
	}
    }
}
fixup($core);
$core;
