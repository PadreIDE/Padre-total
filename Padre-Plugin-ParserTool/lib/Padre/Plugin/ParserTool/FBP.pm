package Padre::Plugin::ParserTool::FBP;

# This module was generated by Padre::Plugin::FormBuilder::Perl.
# To change this module, edit the original .fbp file and regenerate.
# DO NOT MODIFY BY HAND!

use 5.008;
use strict;
use warnings;
use Padre::Wx ();
use Padre::Wx::Role::Main ();

our $VERSION = '0.01';
our @ISA     = qw{
	Padre::Wx::Role::Main
	Wx::Dialog
};

sub new {
	my $class  = shift;
	my $parent = shift;

	my $self = $class->SUPER::new(
		$parent,
		-1,
		Wx::gettext("Parser Tool"),
		Wx::wxDefaultPosition,
		[ 500, 600 ],
		Wx::wxDEFAULT_DIALOG_STYLE | Wx::wxRESIZE_BORDER,
	);

	$self->{m_staticText5} = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Intro blurb and instructions..."),
	);

	$self->{m_staticline1} = Wx::StaticLine->new(
		$self,
		-1,
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		Wx::wxLI_HORIZONTAL,
	);

	$self->{m_staticText3} = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Parser Module"),
	);

	$self->{module} = Wx::ComboBox->new(
		$self,
		-1,
		"PPI",
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		[
			"PPI",
		],
		Wx::wxCB_DROPDOWN,
	);

	$self->{m_staticText4} = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Parser Function"),
	);

	$self->{function} = Wx::ComboBox->new(
		$self,
		-1,
		"PPI::Document->new( \\\$INPUT )",
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		[ ],
	);

	$self->{m_staticText6} = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Dumper Format"),
	);

	$self->{dumper} = Wx::Choice->new(
		$self,
		-1,
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		[
			"Devel::Dumpvar",
			"Data::Dumper",
		],
	);
	$self->{dumper}->SetSelection(0);

	Wx::Event::EVT_CHOICE(
		$self,
		$self->{dumper},
		sub {
			shift->dumper(@_);
		},
	);

	$self->{m_staticline2} = Wx::StaticLine->new(
		$self,
		-1,
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		Wx::wxLI_HORIZONTAL,
	);

	$self->{m_splitter2} = Wx::SplitterWindow->new(
		$self,
		-1,
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		Wx::wxSP_LIVE_UPDATE | Wx::wxSP_NOBORDER,
	);
	$self->{m_splitter2}->SetSashGravity(0.5);
	$self->{m_splitter2}->SetMinimumPaneSize(100);

	$self->{m_panel1} = Wx::Panel->new(
		$self->{m_splitter2},
		-1,
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		Wx::wxTAB_TRAVERSAL,
	);

	$self->{m_staticText1} = Wx::StaticText->new(
		$self->{m_panel1},
		-1,
		Wx::gettext("Input Text"),
	);

	$self->{input} = Wx::TextCtrl->new(
		$self->{m_panel1},
		-1,
		"",
		Wx::wxDefaultPosition,
		[ 250, 300 ],
		Wx::wxTE_DONTWRAP | Wx::wxTE_MULTILINE,
	);

	Wx::Event::EVT_TEXT(
		$self,
		$self->{input},
		sub {
			shift->input(@_);
		},
	);

	$self->{m_panel2} = Wx::Panel->new(
		$self->{m_splitter2},
		-1,
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		Wx::wxTAB_TRAVERSAL,
	);

	$self->{m_staticText2} = Wx::StaticText->new(
		$self->{m_panel2},
		-1,
		Wx::gettext("Output Structure"),
	);

	$self->{output} = Wx::TextCtrl->new(
		$self->{m_panel2},
		-1,
		"",
		Wx::wxDefaultPosition,
		[ 250, 300 ],
		Wx::wxTE_DONTWRAP | Wx::wxTE_MULTILINE | Wx::wxTE_READONLY,
	);
	$self->{output}->SetBackgroundColour(
		Wx::Colour->new(240, 240, 240)
	);

	my $fgSizer2 = Wx::FlexGridSizer->new( 2, 2, 0, 10 );
	$fgSizer2->AddGrowableCol( 1 );
	$fgSizer2->SetFlexibleDirection( Wx::wxBOTH );
	$fgSizer2->SetNonFlexibleGrowMode( Wx::wxFLEX_GROWMODE_SPECIFIED );
	$fgSizer2->Add( $self->{m_staticText3}, 0, Wx::wxALIGN_CENTER_VERTICAL | Wx::wxALIGN_LEFT | Wx::wxALL, 5 );
	$fgSizer2->Add( $self->{module}, 0, Wx::wxALL | Wx::wxEXPAND, 5 );
	$fgSizer2->Add( $self->{m_staticText4}, 0, Wx::wxALIGN_CENTER_VERTICAL | Wx::wxALIGN_LEFT | Wx::wxALL, 5 );
	$fgSizer2->Add( $self->{function}, 0, Wx::wxALL | Wx::wxEXPAND, 5 );
	$fgSizer2->Add( $self->{m_staticText6}, 0, Wx::wxALIGN_CENTER_VERTICAL | Wx::wxALIGN_LEFT | Wx::wxALL, 5 );
	$fgSizer2->Add( $self->{dumper}, 0, Wx::wxALL | Wx::wxEXPAND, 5 );

	my $bSizer4 = Wx::BoxSizer->new( Wx::wxVERTICAL );
	$bSizer4->Add( $self->{m_staticText1}, 0, Wx::wxALL | Wx::wxEXPAND, 5 );
	$bSizer4->Add( $self->{input}, 1, Wx::wxEXPAND, 0 );

	$self->{m_panel1}->SetSizer($bSizer4);
	$self->{m_panel1}->Layout;
	$bSizer4->Fit($self->{m_panel1});

	my $bSizer5 = Wx::BoxSizer->new( Wx::wxVERTICAL );
	$bSizer5->Add( $self->{m_staticText2}, 0, Wx::wxALL | Wx::wxEXPAND, 5 );
	$bSizer5->Add( $self->{output}, 1, Wx::wxEXPAND, 0 );

	$self->{m_panel2}->SetSizer($bSizer5);
	$self->{m_panel2}->Layout;
	$bSizer5->Fit($self->{m_panel2});

	$self->{m_splitter2}->SplitVertically(
		$self->{m_panel1},
		$self->{m_panel2},
	);

	my $bSizer2 = Wx::BoxSizer->new( Wx::wxVERTICAL );
	$bSizer2->Add( $self->{m_staticText5}, 0, Wx::wxALL, 5 );
	$bSizer2->Add( $self->{m_staticline1}, 0, Wx::wxBOTTOM | Wx::wxEXPAND | Wx::wxTOP, 5 );
	$bSizer2->Add( $fgSizer2, 0, Wx::wxEXPAND, 5 );
	$bSizer2->Add( $self->{m_staticline2}, 0, Wx::wxBOTTOM | Wx::wxEXPAND | Wx::wxTOP, 5 );
	$bSizer2->Add( $self->{m_splitter2}, 1, Wx::wxEXPAND, 5 );

	my $bSizer1 = Wx::BoxSizer->new( Wx::wxHORIZONTAL );
	$bSizer1->Add( $bSizer2, 1, Wx::wxALL | Wx::wxEXPAND, 5 );

	$self->SetSizer($bSizer1);
	$self->Layout;
	$bSizer1->Fit($self);
	$bSizer1->SetSizeHints($self);

	return $self;
}

sub dumper {
	my $self  = shift;
	my $event = shift;

	die 'EVENT HANDLER NOT IMPLEMENTED';
}

sub input {
	my $self  = shift;
	my $event = shift;

	die 'EVENT HANDLER NOT IMPLEMENTED';
}

1;

# Copyright 2008-2011 The Padre development team as listed in Padre.pm.
# LICENSE
# This program is free software; you can redistribute it and/or
# modify it under the same terms as Perl 5 itself.

