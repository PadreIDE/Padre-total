#!/usr/bin/perl
use strict;
use warnings;

use Cwd                   qw{ cwd };
use File::Spec::Functions qw{ catfile catdir };
use File::Find::Rule;
use File::Basename        qw{ basename };
use Env                   qw{ LANG };
use Getopt::Long          qw{ GetOptions };

my $text;
my $html;
GetOptions('text' => \$text, 'html' => \$html)
  or usage();
usage() if not $text and not $html;

$LANG = 'C';

my $cwd       = cwd;
my $localedir = catdir ( $cwd, 'share', 'locale' );
my $pot_file  = catfile( $localedir, 'messages.pot' );
my $text_report_file = catfile($cwd, 'po_report.txt');

die "Can't find '$localedir' directory. "
	. "Please run this tool on the 'Padre' base directory"
	if not -d $localedir;
if ($text) {
	chdir $localedir;
	my ($header, $report) = collect_report();
	save_text_report($header, $report, $text_report_file);
}




sub collect_report {
	my $header  = "Generated by $0 on " . localtime() . "\n\n";
	$header    .= "Language  Errors\n";
	my $report = '';	my @po_files  = glob '*.po';
	foreach my $po_file (@po_files) {
		system "msgcmp $po_file messages.pot 2> err";
		$report .= "\n------------------\n";
		$report .= basename($po_file) . "\n\n";
		$header .= basename($po_file) . "     ";
		if (open my $fh, '<', 'err') {
			local $/ = undef;
			my $data = <$fh>;
			if ($data =~ /msgcmp: found (\d+) fatal errors?/) {
				$report .= "Fatal errors: $1\n\n";
				$header .= $1;
			}
			$report .= $data;
		}
		$header .= "\n";
		unlink 'err';
	}
	return ($header, $report);
}


sub save_text_report {
	my ($header, $report, $text_report_file) = @_;
	open my $fh, '>', $text_report_file or die;
	print {$fh} $header;
	print {$fh} $report;
	print "file 'po_report.txt' generated.\n";
}



sub usage {
	my $msg = shift;
	print "$msg\n\n" if defined $msg;
	print "Usage: $0 [--text|--html]\n";
	
	exit 1;
}