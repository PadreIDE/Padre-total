package Padre::Plugin::FormBuilder::FBP;

## no critic

# This module was generated by Padre::Plugin::FormBuilder::Perl.
# To change this module edit the original .fbp file and regenerate.
# DO NOT MODIFY THIS FILE BY HAND!

use 5.008;
use strict;
use warnings;
use Padre::Wx ();
use Padre::Wx::Role::Main ();
use File::ShareDir ();

our $VERSION = '0.02';
our @ISA     = qw{
	Padre::Wx::Role::Main
	Wx::Dialog
};

sub new {
	my $class  = shift;
	my $parent = shift;

	my $self = $class->SUPER::new(
		$parent,
		-1,
		Wx::gettext("Padre Form Builder"),
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		Wx::wxDEFAULT_DIALOG_STYLE,
	);

	my $m_bitmap3 = Wx::StaticBitmap->new(
		$self,
		-1,
		Wx::Bitmap->new( File::ShareDir::dist_file( "Padre-Plugin-FormBuilder", "wxfb.png" ), Wx::wxBITMAP_TYPE_ANY ),
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
	);

	my $file = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("wxFormBuilder Project"),
	);
	$file->SetFont(
		Wx::Font->new( Wx::wxNORMAL_FONT->GetPointSize, 70, 90, 92, 0, "" )
	);

	my $browse = Wx::FilePickerCtrl->new(
		$self,
		-1,
		"",
		Wx::gettext("Select a file"),
		"*.*",
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		Wx::wxFLP_DEFAULT_STYLE,
	);

	Wx::Event::EVT_FILEPICKER_CHANGED(
		$self,
		$browse,
		sub {
			shift->browse_changed(@_);
		},
	);

	my $line1 = Wx::StaticLine->new(
		$self,
		-1,
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		Wx::wxLI_HORIZONTAL,
	);

	my $m_bitmap1 = Wx::StaticBitmap->new(
		$self,
		-1,
		Wx::Bitmap->new( File::ShareDir::dist_file( "Padre-Plugin-FormBuilder", "single.png" ), Wx::wxBITMAP_TYPE_ANY ),
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
	);

	my $m_staticText4 = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Generate Single Dialog"),
	);
	$m_staticText4->SetFont(
		Wx::Font->new( Wx::wxNORMAL_FONT->GetPointSize, 70, 90, 92, 0, "" )
	);

	my $associate = Wx::CheckBox->new(
		$self,
		-1,
		Wx::gettext("...and associate with current project"),
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
	);
	$associate->SetToolTip(
		Wx::gettext("Generates embedded tracking data in the dialog code")
	);
	$associate->Disable;

	my $select = Wx::Choice->new(
		$self,
		-1,
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		[],
	);
	$select->SetSelection(0);
	$select->Disable;

	my $preview = Wx::Button->new(
		$self,
		-1,
		Wx::gettext("Preview"),
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
	);
	$preview->Disable;

	Wx::Event::EVT_BUTTON(
		$self,
		$preview,
		sub {
			shift->preview_clicked(@_);
		},
	);

	my $m_staticText6 = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Encapsulation:"),
	);

	my $encapsulation = Wx::Choice->new(
		$self,
		-1,
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		[
			"Naive",
			"Strict",
		],
	);
	$encapsulation->SetSelection(0);
	$encapsulation->Disable;

	my $m_staticText5 = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("\$VERSION ="),
	);

	my $version = Wx::TextCtrl->new(
		$self,
		-1,
		"0.01",
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		Wx::wxTE_LEFT,
	);
	$version->SetMaxLength(10);
	$version->Disable;

	my $generate = Wx::Button->new(
		$self,
		-1,
		Wx::gettext("Generate Dialog"),
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
	);
	$generate->Disable;

	Wx::Event::EVT_BUTTON(
		$self,
		$generate,
		sub {
			shift->generate_clicked(@_);
		},
	);

	my $line2 = Wx::StaticLine->new(
		$self,
		-1,
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		Wx::wxLI_HORIZONTAL,
	);

	my $m_bitmap2 = Wx::StaticBitmap->new(
		$self,
		-1,
		Wx::Bitmap->new( File::ShareDir::dist_file( "Padre-Plugin-FormBuilder", "common.png" ), Wx::wxBITMAP_TYPE_ANY ),
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
	);

	my $m_staticText3 = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Common Settings"),
	);
	$m_staticText3->SetFont(
		Wx::Font->new( Wx::wxNORMAL_FONT->GetPointSize, 70, 90, 92, 0, "" )
	);

	my $padre = Wx::CheckBox->new(
		$self,
		-1,
		Wx::gettext("Generate dialog code for use in Padre or a Padre plugin"),
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
	);
	$padre->Disable;

	my $m_staticline4 = Wx::StaticLine->new(
		$self,
		-1,
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
		Wx::wxLI_HORIZONTAL,
	);

	my $cancel = Wx::Button->new(
		$self,
		Wx::wxID_CANCEL,
		Wx::gettext("Close"),
		Wx::wxDefaultPosition,
		Wx::wxDefaultSize,
	);

	my $bSizer9 = Wx::BoxSizer->new(Wx::wxHORIZONTAL);
	$bSizer9->Add( $m_bitmap3, 0, Wx::wxRIGHT, 5 );
	$bSizer9->Add( $file, 0, Wx::wxALIGN_BOTTOM, 5 );

	my $bSizer6 = Wx::BoxSizer->new(Wx::wxHORIZONTAL);
	$bSizer6->Add( $browse, 1, Wx::wxALL | Wx::wxEXPAND, 5 );

	my $bSizer7 = Wx::BoxSizer->new(Wx::wxHORIZONTAL);
	$bSizer7->Add( $m_bitmap1, 0, Wx::wxALIGN_CENTER_VERTICAL | Wx::wxRIGHT, 5 );
	$bSizer7->Add( $m_staticText4, 0, Wx::wxALIGN_BOTTOM | Wx::wxBOTTOM, 1 );

	my $bSizer5 = Wx::BoxSizer->new(Wx::wxHORIZONTAL);
	$bSizer5->Add( $select, 1, Wx::wxALIGN_CENTER_VERTICAL | Wx::wxALL | Wx::wxEXPAND, 5 );
	$bSizer5->Add( $preview, 0, Wx::wxALIGN_CENTER_VERTICAL | Wx::wxALL, 5 );

	my $fgSizer2 = Wx::FlexGridSizer->new( 2, 2, 0, 0 );
	$fgSizer2->SetFlexibleDirection(Wx::wxBOTH);
	$fgSizer2->SetNonFlexibleGrowMode(Wx::wxFLEX_GROWMODE_SPECIFIED);
	$fgSizer2->Add( $m_staticText6, 0, Wx::wxALIGN_CENTER_VERTICAL | Wx::wxALL, 5 );
	$fgSizer2->Add( $encapsulation, 0, Wx::wxALL | Wx::wxEXPAND, 5 );
	$fgSizer2->Add( $m_staticText5, 0, Wx::wxALIGN_CENTER_VERTICAL | Wx::wxALIGN_RIGHT | Wx::wxALL, 5 );
	$fgSizer2->Add( $version, 0, Wx::wxALL, 5 );

	my $bSizer8 = Wx::BoxSizer->new(Wx::wxHORIZONTAL);
	$bSizer8->Add( $m_bitmap2, 0, Wx::wxRIGHT, 5 );
	$bSizer8->Add( $m_staticText3, 0, Wx::wxALIGN_BOTTOM, 1 );

	my $buttons = Wx::BoxSizer->new(Wx::wxHORIZONTAL);
	$buttons->Add( 50, 0, 1, Wx::wxEXPAND, 5 );
	$buttons->Add( $cancel, 0, Wx::wxALL, 5 );

	my $sizer2 = Wx::BoxSizer->new(Wx::wxVERTICAL);
	$sizer2->Add( $bSizer9, 1, Wx::wxALL | Wx::wxEXPAND, 5 );
	$sizer2->Add( $bSizer6, 0, Wx::wxEXPAND, 5 );
	$sizer2->Add( 0, 5, 0, Wx::wxEXPAND, 5 );
	$sizer2->Add( $line1, 0, Wx::wxBOTTOM | Wx::wxEXPAND | Wx::wxTOP, 0 );
	$sizer2->Add( $bSizer7, 1, Wx::wxALL | Wx::wxEXPAND, 5 );
	$sizer2->Add( $associate, 0, Wx::wxALIGN_CENTER_VERTICAL | Wx::wxALL, 5 );
	$sizer2->Add( $bSizer5, 0, Wx::wxEXPAND, 0 );
	$sizer2->Add( $fgSizer2, 0, Wx::wxEXPAND, 5 );
	$sizer2->Add( 0, 20, 0, Wx::wxEXPAND, 5 );
	$sizer2->Add( $generate, 0, Wx::wxALIGN_CENTER_HORIZONTAL | Wx::wxALL, 5 );
	$sizer2->Add( $line2, 0, Wx::wxBOTTOM | Wx::wxEXPAND | Wx::wxTOP, 5 );
	$sizer2->Add( $bSizer8, 1, Wx::wxALL | Wx::wxEXPAND, 5 );
	$sizer2->Add( $padre, 0, Wx::wxALL, 5 );
	$sizer2->Add( 0, 10, 0, Wx::wxEXPAND, 5 );
	$sizer2->Add( $m_staticline4, 0, Wx::wxEXPAND, 5 );
	$sizer2->Add( $buttons, 0, Wx::wxEXPAND, 5 );

	my $sizer1 = Wx::BoxSizer->new(Wx::wxHORIZONTAL);
	$sizer1->Add( $sizer2, 1, Wx::wxEXPAND, 5 );

	$self->SetSizer($sizer1);
	$self->Layout;
	$sizer1->Fit($self);

	$self->{browse} = $browse->GetId;
	$self->{associate} = $associate->GetId;
	$self->{select} = $select->GetId;
	$self->{preview} = $preview->GetId;
	$self->{encapsulation} = $encapsulation->GetId;
	$self->{version} = $version->GetId;
	$self->{generate} = $generate->GetId;
	$self->{padre} = $padre->GetId;

	return $self;
}

sub browse {
	Wx::Window::FindWindowById($_[0]->{browse});
}

sub associate {
	Wx::Window::FindWindowById($_[0]->{associate});
}

sub select {
	Wx::Window::FindWindowById($_[0]->{select});
}

sub preview {
	Wx::Window::FindWindowById($_[0]->{preview});
}

sub encapsulation {
	Wx::Window::FindWindowById($_[0]->{encapsulation});
}

sub version {
	Wx::Window::FindWindowById($_[0]->{version});
}

sub generate {
	Wx::Window::FindWindowById($_[0]->{generate});
}

sub padre {
	Wx::Window::FindWindowById($_[0]->{padre});
}

sub browse_changed {
	$_[0]->main->error('Handler method browse_changed for event browse.OnFileChanged not implemented');
}

sub preview_clicked {
	$_[0]->main->error('Handler method preview_clicked for event preview.OnButtonClick not implemented');
}

sub generate_clicked {
	$_[0]->main->error('Handler method generate_clicked for event generate.OnButtonClick not implemented');
}

1;

# Copyright 2008-2011 The Padre development team as listed in Padre.pm.
# LICENSE
# This program is free software; you can redistribute it and/or
# modify it under the same terms as Perl 5 itself.

